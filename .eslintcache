[{"/home/simenghe/Documents/Coding/image-repo-frontend/src/index.js":"1","/home/simenghe/Documents/Coding/image-repo-frontend/src/App.js":"2","/home/simenghe/Documents/Coding/image-repo-frontend/src/reportWebVitals.js":"3","/home/simenghe/Documents/Coding/image-repo-frontend/src/components/ImageCard.js":"4","/home/simenghe/Documents/Coding/image-repo-frontend/src/components/LoginPage.js":"5","/home/simenghe/Documents/Coding/image-repo-frontend/src/utils/firebase.config.js":"6","/home/simenghe/Documents/Coding/image-repo-frontend/src/components/ImagePage.js":"7","/home/simenghe/Documents/Coding/image-repo-frontend/src/components/UploadPage.js":"8","/home/simenghe/Documents/Coding/image-repo-frontend/src/components/SignoutPage.js":"9","/home/simenghe/Documents/Coding/image-repo-frontend/src/components/NavBar.js":"10","/home/simenghe/Documents/Coding/image-repo-frontend/src/context/UserProvider.js":"11","/home/simenghe/Documents/Coding/image-repo-frontend/src/components/MyImagePage.js":"12","/home/simenghe/Documents/Coding/image-repo-frontend/src/utils/PrivateRoute.js":"13","/home/simenghe/Documents/Coding/image-repo-frontend/src/context/ImagesProvider.js":"14","/home/simenghe/Documents/Coding/image-repo-frontend/src/context/PublicImagesProvider.js":"15"},{"size":502,"mtime":1609964639746,"results":"16","hashOfConfig":"17"},{"size":1765,"mtime":1610419125430,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1609695477292,"results":"19","hashOfConfig":"17"},{"size":2032,"mtime":1610313750682,"results":"20","hashOfConfig":"17"},{"size":612,"mtime":1610039648904,"results":"21","hashOfConfig":"17"},{"size":586,"mtime":1610042184538,"results":"22","hashOfConfig":"17"},{"size":4698,"mtime":1610503237167,"results":"23","hashOfConfig":"17"},{"size":4729,"mtime":1610416533291,"results":"24","hashOfConfig":"17"},{"size":658,"mtime":1610040002251,"results":"25","hashOfConfig":"17"},{"size":2299,"mtime":1610310009227,"results":"26","hashOfConfig":"17"},{"size":1622,"mtime":1610502416694,"results":"27","hashOfConfig":"17"},{"size":7534,"mtime":1610506398701,"results":"28","hashOfConfig":"17"},{"size":479,"mtime":1610314373876,"results":"29","hashOfConfig":"17"},{"size":340,"mtime":1610312763948,"results":"30","hashOfConfig":"17"},{"size":389,"mtime":1610419093895,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"16ilce1",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/home/simenghe/Documents/Coding/image-repo-frontend/src/index.js",[],["68","69"],"/home/simenghe/Documents/Coding/image-repo-frontend/src/App.js",[],"/home/simenghe/Documents/Coding/image-repo-frontend/src/reportWebVitals.js",[],"/home/simenghe/Documents/Coding/image-repo-frontend/src/components/ImageCard.js",["70","71"],"import React, { useContext } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ImagesContext } from \"../context/ImagesProvider\";\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\nexport default function ImageCard({ url, id, date }) {\n  const [images, setImages] = useContext(ImagesContext);\n  async function handleRemove() {\n    setImages(prev=> prev.filter(image => image.id !== id));\n  }\n\n  const classes = useStyles();\n  return (\n    <Card className={classes.card}>\n      <CardMedia\n        className={classes.cardMedia}\n        image={url}\n        title=\"Image title\"\n      />\n      <CardContent className={classes.cardContent}>\n        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n          {id}\n        </Typography>\n        <Typography>\n          {`Uploaded : ${new Date(date).toLocaleDateString()}`}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button href={url} target=\"_blank\" size=\"small\" color=\"primary\">\n          View\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Remove\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","/home/simenghe/Documents/Coding/image-repo-frontend/src/components/LoginPage.js",[],"/home/simenghe/Documents/Coding/image-repo-frontend/src/utils/firebase.config.js",[],["72","73"],"/home/simenghe/Documents/Coding/image-repo-frontend/src/components/ImagePage.js",["74","75"],"\nimport React, { useContext, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ImagesContext } from \"../context/ImagesProvider\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport { UserContext } from \"../context/UserProvider\";\nimport { PublicImagesContext } from \"../context/PublicImagesProvider\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      <Link color=\"inherit\" href=\"https://simenghe.github.io/\"></Link>{\" \"}\n      {new Date().getFullYear()}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ImagePage() {\n  const classes = useStyles();\n  const [publicImages, setPublicImages] = useContext(PublicImagesContext);\n  const { getIdToken, curUser } = useContext(UserContext);\n\n  // Grab all public images\n  useEffect(() => {\n    async function fetchImageUrls() {\n      try {\n        const url = process.env.REACT_APP_SERVER_URL + \"/images/getpublicurls\";\n        const resp = await axios.get(url);\n        console.log(resp);\n        if (resp.status === 200) {\n          if (resp.data.length > 0) {\n            setPublicImages(resp.data);\n          }\n          // setImageURLs(resp.data);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n    fetchImageUrls();\n  }, [setPublicImages, curUser, getIdToken]);\n\n  return (\n    <React.Fragment>\n      <main>\n        {/* Hero unit */}\n        <div className={classes.heroContent}>\n          <Container maxWidth=\"sm\">\n            <Typography\n              component=\"h1\"\n              variant=\"h2\"\n              align=\"center\"\n              color=\"textPrimary\"\n              gutterBottom\n            >\n              Public Images\n            </Typography>\n            <div className={classes.heroButtons}></div>\n          </Container>\n        </div>\n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          {/* End hero unit */}\n          <Grid container spacing={3}>\n            {publicImages.map((file) => (\n              <Grid item key={file.id} xs={12} sm={6} md={4}>\n                {/* <ImageCard id={file.id} url={file.signedUrl} date={file.date} /> */}\n                <Card className={classes.card}>\n                  <CardMedia\n                    className={classes.cardMedia}\n                    image={file.url}\n                    title=\"Image title\"\n                  />\n                  <CardContent className={classes.cardContent}>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      {/* {file.id} */}\n                    </Typography>\n                    <Typography>\n                      {`Uploaded : ${new Date(file.date).toLocaleDateString()}`}\n                    </Typography>\n                  </CardContent>\n                  <CardActions>\n                    <Button href={file.url} target=\"_blank\" size=\"small\" color=\"primary\">\n                      View\n                  </Button>\n                  </CardActions>\n                </Card>\n              </Grid>\n            ))}\n          </Grid>\n        </Container>\n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          Image Repo\n        </Typography>\n        <Typography\n          variant=\"subtitle1\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\"\n        >\n          Shopify Developer Intern Challenge!\n        </Typography>\n        <Copyright />\n      </footer>\n      {/* End footer */}\n    </React.Fragment >\n  );\n}\n","/home/simenghe/Documents/Coding/image-repo-frontend/src/components/UploadPage.js",["76"],"import React, { useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { UserContext } from '../context/UserProvider';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\n\nexport default function Checkout() {\n  const classes = useStyles();\n  const [files, setFiles] = useState([]);\n  const [publicUpload, setPublicUpload] = useState(false);\n  const { getIdToken, curUser } = useContext(UserContext);\n\n  async function handleCheckbox(e) {\n    setPublicUpload(e.target.checked);\n  }\n\n  async function handlePublicUpload() {\n    let url = process.env.REACT_APP_SERVER_URL + '/images/upload';\n    try {\n      const config = {\n        'content-type': 'multipart/form-data',\n        headers: {\n          'Authorization': `token ${await getIdToken()}`,\n          'UID': `${curUser.uid}`,\n          'publicupload': publicUpload,\n        }\n      }\n      const formData = new FormData();\n      if (!files) {\n        console.log(\"No Files!\");\n        return;\n      }\n      // if (files.length === 1) {\n      //   formData.append('file', files[0]);\n      //   console.log(formData);\n      //   const resp = await axios.post(url, formData, config);\n      //   console.log(resp);\n      // }\n      if (files.length > 0) {\n        url = process.env.REACT_APP_SERVER_URL + '/images/uploadmultiple';\n        for (let i = 0; i < files.length; i++) {\n          formData.append('images', files[i]);\n        }\n        const resp = await axios.post(url, formData, config);\n        console.log(resp);\n        window.confirm(\"Success!\")\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async function handleUpload(e) {\n    await e.preventDefault();\n    await handlePublicUpload();\n    // const newUrl = process.env.REACT_APP_SERVER_URL + \"/storage/testauth\";\n    // console.log(newUrl);\n    // const config = {\n    //   'content-type': 'multipart/form-data',\n    //   headers: {\n    //     'Authorization': `token ${await getIdToken()}`,\n    //     'UID': `${curUser.uid}`,\n    //     'publicupload': true,\n    //   }\n    // }\n    // const resp = await axios.post(newUrl, curUser, config);\n    // console.log(resp);\n    // setFiles([]);\n    // e.target.files = [];\n\n  }\n\n  async function onChange(e) {\n    console.log(e.target.files);\n    setFiles(e.target.files);\n  }\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Toolbar>\n      </Toolbar>\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Upload Images Here\n            <form onSubmit={handleUpload}>\n              <input type=\"file\" name=\"file\" onChange={onChange} accept=\"image/*\" multiple />\n              <br />\n              <FormControlLabel labelPlacement=\"bottom\" className=\"checkboxtext\" control={<Checkbox\n                checked={publicUpload}\n                onChange={handleCheckbox}\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n              />} label=\"Public\" />\n              <br />\n              <button>Upload</button>\n            </form>\n          </Typography>\n          <React.Fragment>\n          </React.Fragment>\n        </Paper>\n      </main>\n    </React.Fragment>\n  );\n}","/home/simenghe/Documents/Coding/image-repo-frontend/src/components/SignoutPage.js",[],"/home/simenghe/Documents/Coding/image-repo-frontend/src/components/NavBar.js",[],"/home/simenghe/Documents/Coding/image-repo-frontend/src/context/UserProvider.js",["77"],"import React, { useEffect, useState, createContext, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { auth, googleProvider } from '../utils/firebase.config';\n\nexport const UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n    const [curUser, setCurUser] = useState(null);\n    const [pending, setPending] = useState(true);\n    const history = useHistory();\n\n    async function handleLogin() {\n        try {\n            await auth.signInWithPopup(googleProvider);\n            history.push('/');\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    async function handleLogout() {\n        auth.signOut().then(() => {\n            console.log(`Logged out!`);\n        }).catch(err => {\n            console.error(err.message);\n        });\n    }\n\n    async function getIdToken() {\n        try {\n            const idToken = await auth.currentUser.getIdToken(true);\n            // console.log(idToken);\n            return idToken;\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n\n    useEffect(() => {\n        const unsub = auth.onAuthStateChanged((user) => {\n            console.log(\"Change\");\n            setCurUser(user);\n            setPending(false);\n        });\n        return unsub;\n    }, [])\n\n    if (pending) {\n        return <>Loading...</>;\n    }\n    const value = {\n        curUser,\n        handleLogin,\n        handleLogout,\n        getIdToken,\n    }\n    return (\n        <UserContext.Provider\n            value={value}\n        >\n            {!pending && children}\n        </UserContext.Provider>\n    );\n};","/home/simenghe/Documents/Coding/image-repo-frontend/src/components/MyImagePage.js",[],"/home/simenghe/Documents/Coding/image-repo-frontend/src/utils/PrivateRoute.js",[],"/home/simenghe/Documents/Coding/image-repo-frontend/src/context/ImagesProvider.js",[],"/home/simenghe/Documents/Coding/image-repo-frontend/src/context/PublicImagesProvider.js",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":43,"column":10,"nodeType":"84","messageId":"85","endLine":43,"endColumn":16},{"ruleId":"82","severity":1,"message":"86","line":44,"column":18,"nodeType":"84","messageId":"85","endLine":44,"endColumn":30},{"ruleId":"78","replacedBy":"87"},{"ruleId":"80","replacedBy":"88"},{"ruleId":"82","severity":1,"message":"89","line":2,"column":29,"nodeType":"84","messageId":"85","endLine":2,"endColumn":37},{"ruleId":"82","severity":1,"message":"90","line":10,"column":10,"nodeType":"84","messageId":"85","endLine":10,"endColumn":23},{"ruleId":"82","severity":1,"message":"91","line":14,"column":10,"nodeType":"84","messageId":"85","endLine":14,"endColumn":19},{"ruleId":"82","severity":1,"message":"92","line":1,"column":53,"nodeType":"84","messageId":"85","endLine":1,"endColumn":63},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'images' is assigned a value but never used.","Identifier","unusedVar","'handleRemove' is defined but never used.",["93"],["94"],"'useState' is defined but never used.","'ImagesContext' is defined but never used.","'Copyright' is defined but never used.","'useContext' is defined but never used.","no-global-assign","no-unsafe-negation"]